 void solve(int ind,int k,int t,vector<int>&nums,vector<int>&temp,vector<vector<int>>&ans)
        {
                if(ind>=nums.size())
                {
                        if(t==0 && temp.size()==k)
                        {
                                ans.push_back(temp);
                        }
                        return;
                }
                if(nums[ind]<=t)
                {
                        temp.push_back(nums[ind]);
                        solve(ind+1,k,t-nums[ind],nums,temp,ans);
                        temp.pop_back();
                }
                solve(ind+1,k,t,nums,temp,ans);
        }
    vector<vector<int>> combinationSum3(int k, int n) {
            vector<int>nums;
            for(int i=1;i<=9;i++)
            {
                    nums.push_back(i);
            }
            vector<vector<int>>ans;
            vector<int>temp;
            solve(0,k,n,nums,temp,ans);
            return ans;
        
    }
